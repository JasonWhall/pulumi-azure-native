// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.OperationalInsights.Outputs
{

    [OutputType]
    public sealed class BookmarkPropertiesResponse
    {
        /// <summary>
        /// The time the bookmark was created
        /// </summary>
        public readonly string? Created;
        /// <summary>
        /// Describes a user that created the bookmark
        /// </summary>
        public readonly Outputs.UserInfoResponse? CreatedBy;
        /// <summary>
        /// The display name of the bookmark
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Describes an incident that relates to bookmark
        /// </summary>
        public readonly Outputs.IncidentInfoResponse? IncidentInfo;
        /// <summary>
        /// List of labels relevant to this bookmark
        /// </summary>
        public readonly ImmutableArray<string> Labels;
        /// <summary>
        /// The notes of the bookmark
        /// </summary>
        public readonly string? Notes;
        /// <summary>
        /// The query of the bookmark.
        /// </summary>
        public readonly string Query;
        /// <summary>
        /// The query result of the bookmark.
        /// </summary>
        public readonly string? QueryResult;
        /// <summary>
        /// The last time the bookmark was updated
        /// </summary>
        public readonly string? Updated;
        /// <summary>
        /// Describes a user that updated the bookmark
        /// </summary>
        public readonly Outputs.UserInfoResponse? UpdatedBy;

        [OutputConstructor]
        private BookmarkPropertiesResponse(
            string? created,

            Outputs.UserInfoResponse? createdBy,

            string displayName,

            Outputs.IncidentInfoResponse? incidentInfo,

            ImmutableArray<string> labels,

            string? notes,

            string query,

            string? queryResult,

            string? updated,

            Outputs.UserInfoResponse? updatedBy)
        {
            Created = created;
            CreatedBy = createdBy;
            DisplayName = displayName;
            IncidentInfo = incidentInfo;
            Labels = labels;
            Notes = notes;
            Query = query;
            QueryResult = queryResult;
            Updated = updated;
            UpdatedBy = updatedBy;
        }
    }
}
