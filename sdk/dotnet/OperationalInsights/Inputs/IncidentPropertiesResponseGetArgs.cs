// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureRM.OperationalInsights.Inputs
{

    /// <summary>
    /// Describes incident properties
    /// </summary>
    public sealed class IncidentPropertiesResponseGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Additional data on the incident
        /// </summary>
        [Input("additionalData", required: true)]
        public Input<Inputs.IncidentAdditionalDataResponseGetArgs> AdditionalData { get; set; } = null!;

        /// <summary>
        /// The reason the incident was closed
        /// </summary>
        [Input("classification")]
        public Input<string>? Classification { get; set; }

        /// <summary>
        /// Describes the reason the incident was closed
        /// </summary>
        [Input("classificationComment")]
        public Input<string>? ClassificationComment { get; set; }

        /// <summary>
        /// The classification reason the incident was closed with
        /// </summary>
        [Input("classificationReason")]
        public Input<string>? ClassificationReason { get; set; }

        /// <summary>
        /// The time the incident was created
        /// </summary>
        [Input("createdTimeUtc", required: true)]
        public Input<string> CreatedTimeUtc { get; set; } = null!;

        /// <summary>
        /// The description of the incident
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The time of the first activity in the incident
        /// </summary>
        [Input("firstActivityTimeUtc")]
        public Input<string>? FirstActivityTimeUtc { get; set; }

        /// <summary>
        /// A sequential number
        /// </summary>
        [Input("incidentNumber", required: true)]
        public Input<int> IncidentNumber { get; set; } = null!;

        /// <summary>
        /// The deep-link url to the incident in Azure portal
        /// </summary>
        [Input("incidentUrl", required: true)]
        public Input<string> IncidentUrl { get; set; } = null!;

        [Input("labels")]
        private InputList<Inputs.IncidentLabelResponseGetArgs>? _labels;

        /// <summary>
        /// List of labels relevant to this incident
        /// </summary>
        public InputList<Inputs.IncidentLabelResponseGetArgs> Labels
        {
            get => _labels ?? (_labels = new InputList<Inputs.IncidentLabelResponseGetArgs>());
            set => _labels = value;
        }

        /// <summary>
        /// The time of the last activity in the incident
        /// </summary>
        [Input("lastActivityTimeUtc")]
        public Input<string>? LastActivityTimeUtc { get; set; }

        /// <summary>
        /// The last time the incident was updated
        /// </summary>
        [Input("lastModifiedTimeUtc", required: true)]
        public Input<string> LastModifiedTimeUtc { get; set; } = null!;

        /// <summary>
        /// Describes a user that the incident is assigned to
        /// </summary>
        [Input("owner")]
        public Input<Inputs.IncidentOwnerInfoResponseGetArgs>? Owner { get; set; }

        [Input("relatedAnalyticRuleIds", required: true)]
        private InputList<string>? _relatedAnalyticRuleIds;

        /// <summary>
        /// List of resource ids of Analytic rules related to the incident
        /// </summary>
        public InputList<string> RelatedAnalyticRuleIds
        {
            get => _relatedAnalyticRuleIds ?? (_relatedAnalyticRuleIds = new InputList<string>());
            set => _relatedAnalyticRuleIds = value;
        }

        /// <summary>
        /// The severity of the incident
        /// </summary>
        [Input("severity", required: true)]
        public Input<string> Severity { get; set; } = null!;

        /// <summary>
        /// The status of the incident
        /// </summary>
        [Input("status", required: true)]
        public Input<string> Status { get; set; } = null!;

        /// <summary>
        /// The title of the incident
        /// </summary>
        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        public IncidentPropertiesResponseGetArgs()
        {
        }
    }
}
