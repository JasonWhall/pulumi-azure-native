name: publish-provider

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      version:
        required: true
        type: string
        description: Version to be used to build the binaries, schema and SDKs
      prerelease:
        required: true
        type: boolean
        description: Indicates if we're doing a pre- or proper release.

env:
  GITHUB_TOKEN: ${{ secrets.PULUMI_BOT_TOKEN }}
  PROVIDER: azure-native
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  publish-provider:
    runs-on: ubuntu-latest
    name: publish
    env:
      GORELEASER_CURRENT_TAG: v${{ inputs.version }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          submodules: true
          ref: ${{ inputs.ref }}

      - name: Install Languages & Frameworks
        uses: ./.github/actions/install
        with:
          skip_dotnet_and_java: "true"

      - run: make ensure

      - name: Prerequisites artifact restore
        uses: ./.github/actions/prerequisites-artifact-restore

      - name: Mark prerequisites as up-to-date
        # Don't include provider as that's the bit we're going to rebuild
        run: make --touch versioner versions codegen schema

      - name: Ensure provider build prerequisites
        run: make provider_prebuild

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: us-east-2
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 7200
          role-session-name: ${{ env.PROVIDER }}@githubActions
          role-external-id: upload-pulumi-release
          role-to-assume: ${{ secrets.AWS_UPLOAD_ROLE_ARN }}

      - name: GoReleaser prerelease
        if: "inputs.prerelease"
        uses: goreleaser/goreleaser-action@v4
        with:
          args:
            -p 3 -f .goreleaser.prerelease.yml --rm-dist --skip-validate --timeout 60m0s
          version: latest

      - name: GoReleaser release
        if: "!inputs.prerelease"
        uses: goreleaser/goreleaser-action@v4
        with:
          args: -p 3 release --rm-dist --timeout 60m0s
          version: latest

      - if: failure() && github.event_name == 'push'
        name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          author_name: Failure in publishing binaries
          fields: repo,commit,author,action
          status: ${{ job.status }}
